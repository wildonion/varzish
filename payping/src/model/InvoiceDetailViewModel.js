/*
 * سرویس‌های پلتفرم مالی پی‌پینگ
 * # مستندات سرویس‌های عمومی پلت‌فرم مالی پی‌پینگ   لینک‌های پشتیبانی: تلگرام: [t.me/payping](t.me/payping) | ایمیل: [info@payping.ir]() | تلفن: 02175038797  # مقدمه   تمامی وب‌ سرویس‌های توضیح داده شده در این مستندات به صورت [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) هستند و طبق همین چهارچوب باید با آنها ارتباط برقرار کرد.   توضیحات تکمیلی‌تر هر سرویس در آدرس زیر به صورت کامل قرار داده شده است.   جهت رفع هرگونه مشکل و یا پرسش با پشتیبانی در تماس باشید.   [راهنمای تکمیلی وب‌سرویس‌ها](https://www.payping.io/help/fa/category/api--qspohi/)    # POSTMAN  برای راحتی کار، فایل postman سرویس ها برای شما آماده شده است که می توانید از لینک زیر روند استفاده از آن را مطالعه بفرمایین و قالب مربوطه را دانلود نمایید.    [راهنمای postman](https://www.payping.io/help/fa/postman/)   # توضیحات تکمیلی برای تمام سرویس‌ها   برای فراخوانی سرویس‌های صفحه‌بندی (pagination) اگر پارامتر ورودی ارسال نشود، حداکثر ۱۰ آیتم نمایش داده می‌شود و همچنین حداکثر تعداد دریافت آیتم به ازای هر درخواست ۵۰ عدد می‌باشد و بیشتر از آن را سرویس پشتیبانی نمی‌کند و در صورت نیاز به بارگزاری تمام آیتم‌های یک سرویس به صورت یکجا با ایمیل به بخش پشتیبانی در تماس باشید. همینطور توجه داشته باشین واحد پول در تمام سرویس‌ها تومان می‌باشد و منطقه زمانی تمامی‌ تاریخ و ساعت‌ها برابر با ساعت جهانی یا UTC می‌باشد.   # نکاتی برای آپلود فایل‌ها   برای آپلود هرگونه فایل اعم از عکس پروفایل کاربران و یا گزارشات پرداخت‌ها و ... می‌بایست که از [سرویس بارگذاری فایل](#tag/Upload) استفاده کنید.    پس از انجام عملیات آپلود توسط سرویس بارگذاری فایل، تنها کافیست نام فایل آپلود شده که در خروجی سرویس به شما برگردانده می‌شود را ذخیره نمایید.   # جدول کدهای دریافتی از هر سرویس   بعد از ارسال هر درخواست به سمت سرور، از سمت ما طبق قواعد وب‌سرویس‌های RESTful یک کدی به شما بازگرداننده می‌شود.  هر کد معنایی دارد که در جدول زیر توضیحات مربوطه را می‌بینید   |شماره کد|توضیحات|  |-------|--------|  |`200`| عملیات با موفقیت انجام شد |  |`400`| مشکلی در ارسال درخواست وجود دارد |  |`500`| مشکلی در سرور رخ داده است |  |`503`| سرور در حال حاضر قادر به پاسخگویی نمی‌باشد |  |`401`| عدم دسترسی|  |`403`| دسترسی غیر مجاز |  |`404`| آیتم درخواستی مورد نظر موجود نمی‌باشد |  
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InvoiceBillToDetailViewModel', 'model/InvoiceCcToDetailViewModel', 'model/InvoiceItemDetailViewModel', 'model/InvoiceSchulderDetailViewModel'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./InvoiceBillToDetailViewModel'), require('./InvoiceCcToDetailViewModel'), require('./InvoiceItemDetailViewModel'), require('./InvoiceSchulderDetailViewModel'));
  } else {
    // Browser globals (root is window)
    if (!root._) {
      root._ = {};
    }
    root._.InvoiceDetailViewModel = factory(root._.ApiClient, root._.InvoiceBillToDetailViewModel, root._.InvoiceCcToDetailViewModel, root._.InvoiceItemDetailViewModel, root._.InvoiceSchulderDetailViewModel);
  }
}(this, function(ApiClient, InvoiceBillToDetailViewModel, InvoiceCcToDetailViewModel, InvoiceItemDetailViewModel, InvoiceSchulderDetailViewModel) {
  'use strict';

  /**
   * The InvoiceDetailViewModel model module.
   * @module model/InvoiceDetailViewModel
   * @version v1
   */

  /**
   * Constructs a new <code>InvoiceDetailViewModel</code>.
   * جزییات فاکتور
   * @alias module:model/InvoiceDetailViewModel
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>InvoiceDetailViewModel</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InvoiceDetailViewModel} obj Optional instance to populate.
   * @return {module:model/InvoiceDetailViewModel} The populated <code>InvoiceDetailViewModel</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
      if (data.hasOwnProperty('parentCode'))
        obj.parentCode = ApiClient.convertToType(data['parentCode'], 'String');
      if (data.hasOwnProperty('paymentCode'))
        obj.paymentCode = ApiClient.convertToType(data['paymentCode'], 'String');
      if (data.hasOwnProperty('ccToes'))
        obj.ccToes = ApiClient.convertToType(data['ccToes'], [InvoiceCcToDetailViewModel]);
      if (data.hasOwnProperty('billToes'))
        obj.billToes = ApiClient.convertToType(data['billToes'], [InvoiceBillToDetailViewModel]);
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'Number');
      if (data.hasOwnProperty('paidManualDescription'))
        obj.paidManualDescription = ApiClient.convertToType(data['paidManualDescription'], 'String');
      if (data.hasOwnProperty('saveToTemplate'))
        obj.saveToTemplate = ApiClient.convertToType(data['saveToTemplate'], 'Boolean');
      if (data.hasOwnProperty('invoiceNumber'))
        obj.invoiceNumber = ApiClient.convertToType(data['invoiceNumber'], 'Number');
      if (data.hasOwnProperty('invoiceTitle'))
        obj.invoiceTitle = ApiClient.convertToType(data['invoiceTitle'], 'String');
      if (data.hasOwnProperty('invoiceDateTime'))
        obj.invoiceDateTime = ApiClient.convertToType(data['invoiceDateTime'], 'Date');
      if (data.hasOwnProperty('dueDate'))
        obj.dueDate = ApiClient.convertToType(data['dueDate'], 'Date');
      if (data.hasOwnProperty('payedDateTime'))
        obj.payedDateTime = ApiClient.convertToType(data['payedDateTime'], 'Date');
      if (data.hasOwnProperty('canceledDateTime'))
        obj.canceledDateTime = ApiClient.convertToType(data['canceledDateTime'], 'Date');
      if (data.hasOwnProperty('subTotal'))
        obj.subTotal = ApiClient.convertToType(data['subTotal'], 'Number');
      if (data.hasOwnProperty('itemsDiscountAmount'))
        obj.itemsDiscountAmount = ApiClient.convertToType(data['itemsDiscountAmount'], 'Number');
      if (data.hasOwnProperty('totalDiscountAmount'))
        obj.totalDiscountAmount = ApiClient.convertToType(data['totalDiscountAmount'], 'Number');
      if (data.hasOwnProperty('totalDiscountPercent'))
        obj.totalDiscountPercent = ApiClient.convertToType(data['totalDiscountPercent'], 'Number');
      if (data.hasOwnProperty('totalDiscountType'))
        obj.totalDiscountType = ApiClient.convertToType(data['totalDiscountType'], 'Number');
      if (data.hasOwnProperty('sumDiscountAmount'))
        obj.sumDiscountAmount = ApiClient.convertToType(data['sumDiscountAmount'], 'Number');
      if (data.hasOwnProperty('totalTaxtionAmount'))
        obj.totalTaxtionAmount = ApiClient.convertToType(data['totalTaxtionAmount'], 'Number');
      if (data.hasOwnProperty('shipping'))
        obj.shipping = ApiClient.convertToType(data['shipping'], 'Number');
      if (data.hasOwnProperty('total'))
        obj.total = ApiClient.convertToType(data['total'], 'Number');
      if (data.hasOwnProperty('notes'))
        obj.notes = ApiClient.convertToType(data['notes'], 'String');
      if (data.hasOwnProperty('termsAndConditions'))
        obj.termsAndConditions = ApiClient.convertToType(data['termsAndConditions'], 'String');
      if (data.hasOwnProperty('memo'))
        obj.memo = ApiClient.convertToType(data['memo'], 'String');
      if (data.hasOwnProperty('invoiceSchulder'))
        obj.invoiceSchulder = InvoiceSchulderDetailViewModel.constructFromObject(data['invoiceSchulder']);
      if (data.hasOwnProperty('invoiceItems'))
        obj.invoiceItems = ApiClient.convertToType(data['invoiceItems'], [InvoiceItemDetailViewModel]);
      if (data.hasOwnProperty('isSendAttachmentsAfterPayment'))
        obj.isSendAttachmentsAfterPayment = ApiClient.convertToType(data['isSendAttachmentsAfterPayment'], 'Boolean');
      if (data.hasOwnProperty('isSendNotesAndTermsAfterPayment'))
        obj.isSendNotesAndTermsAfterPayment = ApiClient.convertToType(data['isSendNotesAndTermsAfterPayment'], 'Boolean');
      if (data.hasOwnProperty('isSendTermsAfterPayment'))
        obj.isSendTermsAfterPayment = ApiClient.convertToType(data['isSendTermsAfterPayment'], 'Boolean');
      if (data.hasOwnProperty('attachFileIds'))
        obj.attachFileIds = ApiClient.convertToType(data['attachFileIds'], ['String']);
      if (data.hasOwnProperty('attachFileAddresses'))
        obj.attachFileAddresses = ApiClient.convertToType(data['attachFileAddresses'], ['String']);
      if (data.hasOwnProperty('qrCodeFileName'))
        obj.qrCodeFileName = ApiClient.convertToType(data['qrCodeFileName'], 'String');
    }
    return obj;
  }

  /**
   * کلید یکتای فاکتور
   * @member {String} code
   */
  exports.prototype.code = undefined;

  /**
   * کلید والد بودن فاکتور
   * @member {String} parentCode
   */
  exports.prototype.parentCode = undefined;

  /**
   * کد یکتای پرداخت
   * @member {String} paymentCode
   */
  exports.prototype.paymentCode = undefined;

  /**
   * لیست ایمیل
   * @member {Array.<module:model/InvoiceCcToDetailViewModel>} ccToes
   */
  exports.prototype.ccToes = undefined;

  /**
   * لیست مشتری
   * @member {Array.<module:model/InvoiceBillToDetailViewModel>} billToes
   */
  exports.prototype.billToes = undefined;

  /**
   * وضعیت فاکتور:  0 = پیش نویس  1 = در انتظار پرداخت  2 = پرداخت شد  3 = معوق  4 = لغو شده  5 = همه
   * @member {module:model/InvoiceDetailViewModel.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * شرح پرداخت دستی
   * @member {String} paidManualDescription
   */
  exports.prototype.paidManualDescription = undefined;

  /**
   * ذخیره به عنوان قالب فاکتور
   * @member {Boolean} saveToTemplate
   */
  exports.prototype.saveToTemplate = undefined;

  /**
   * شماره فاکتور
   * @member {Number} invoiceNumber
   */
  exports.prototype.invoiceNumber = undefined;

  /**
   * عنوان فاکتور
   * @member {String} invoiceTitle
   */
  exports.prototype.invoiceTitle = undefined;

  /**
   * تاریخ ثبت
   * @member {Date} invoiceDateTime
   */
  exports.prototype.invoiceDateTime = undefined;

  /**
   * تاریخ سررسید
   * @member {Date} dueDate
   */
  exports.prototype.dueDate = undefined;

  /**
   * تاریخ پرداخت
   * @member {Date} payedDateTime
   */
  exports.prototype.payedDateTime = undefined;

  /**
   * تاریخ لغو
   * @member {Date} canceledDateTime
   */
  exports.prototype.canceledDateTime = undefined;

  /**
   * جمع مبلغ پرداختی آیتم های مالی
   * @member {Number} subTotal
   */
  exports.prototype.subTotal = undefined;

  /**
   * جمع مبلغ تخفیف آیتم های مالی
   * @member {Number} itemsDiscountAmount
   */
  exports.prototype.itemsDiscountAmount = undefined;

  /**
   * مبلغ تخفیف به کل فاکتور
   * @member {Number} totalDiscountAmount
   */
  exports.prototype.totalDiscountAmount = undefined;

  /**
   * درصد تخفیف به کل فاکتور
   * @member {Number} totalDiscountPercent
   */
  exports.prototype.totalDiscountPercent = undefined;

  /**
   * نوع تخفیف به کل فاکتور:  0 = مبلغ  1 = درصد
   * @member {module:model/InvoiceDetailViewModel.TotalDiscountTypeEnum} totalDiscountType
   */
  exports.prototype.totalDiscountType = undefined;

  /**
   * جمع کل تخفیف اعمال شده روی فاکتور
   * @member {Number} sumDiscountAmount
   */
  exports.prototype.sumDiscountAmount = undefined;

  /**
   * مبلغ مالیات
   * @member {Number} totalTaxtionAmount
   */
  exports.prototype.totalTaxtionAmount = undefined;

  /**
   * هزینه حمل و نقل
   * @member {Number} shipping
   */
  exports.prototype.shipping = undefined;

  /**
   * مبلغ کل
   * @member {Number} total
   */
  exports.prototype.total = undefined;

  /**
   * پیامی جهت نمایش به پرداخت کننده
   * @member {String} notes
   */
  exports.prototype.notes = undefined;

  /**
   * متن شرایط و قوانین جهت نمایش به پرداخت کننده
   * @member {String} termsAndConditions
   */
  exports.prototype.termsAndConditions = undefined;

  /**
   * متن دلخواه جهت یادآوری فقط برای صادر کننده فاکتور
   * @member {String} memo
   */
  exports.prototype.memo = undefined;

  /**
   * ارسال زماندار که رابطه (یک به یک) یا (یک به صفر) دارد
   * @member {module:model/InvoiceSchulderDetailViewModel} invoiceSchulder
   */
  exports.prototype.invoiceSchulder = undefined;

  /**
   * آیتم های مالی فاکتور
   * @member {Array.<module:model/InvoiceItemDetailViewModel>} invoiceItems
   */
  exports.prototype.invoiceItems = undefined;

  /**
   * نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false
   * @member {Boolean} isSendAttachmentsAfterPayment
   */
  exports.prototype.isSendAttachmentsAfterPayment = undefined;

  /**
   * نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false
   * @member {Boolean} isSendNotesAndTermsAfterPayment
   */
  exports.prototype.isSendNotesAndTermsAfterPayment = undefined;

  /**
   * نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false
   * @member {Boolean} isSendTermsAfterPayment
   */
  exports.prototype.isSendTermsAfterPayment = undefined;

  /**
   * لیست کلید یکتای فایل های ضمیمه
   * @member {Array.<String>} attachFileIds
   */
  exports.prototype.attachFileIds = undefined;

  /**
   * لیست آدرس فایل های ضمیمه
   * @member {Array.<String>} attachFileAddresses
   */
  exports.prototype.attachFileAddresses = undefined;

  /**
   * آدرس تصویر بارکد فاکتور
   * @member {String} qrCodeFileName
   */
  exports.prototype.qrCodeFileName = undefined;



  /**
   * Allowed values for the <code>status</code> property.
   * @enum {Number}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: 0
     * @const
     */
    _0: 0,

    /**
     * value: 1
     * @const
     */
    _1: 1,

    /**
     * value: 2
     * @const
     */
    _2: 2,

    /**
     * value: 3
     * @const
     */
    _3: 3,

    /**
     * value: 4
     * @const
     */
    _4: 4,

    /**
     * value: 5
     * @const
     */
    _5: 5
  };


  /**
   * Allowed values for the <code>totalDiscountType</code> property.
   * @enum {Number}
   * @readonly
   */
  exports.TotalDiscountTypeEnum = {
    /**
     * value: 0
     * @const
     */
    _0: 0,

    /**
     * value: 1
     * @const
     */
    _1: 1
  };

  return exports;

}));

/*
 * سرویس‌های پلتفرم مالی پی‌پینگ
 * # مستندات سرویس‌های عمومی پلت‌فرم مالی پی‌پینگ   لینک‌های پشتیبانی: تلگرام: [t.me/payping](t.me/payping) | ایمیل: [info@payping.ir]() | تلفن: 02175038797  # مقدمه   تمامی وب‌ سرویس‌های توضیح داده شده در این مستندات به صورت [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) هستند و طبق همین چهارچوب باید با آنها ارتباط برقرار کرد.   توضیحات تکمیلی‌تر هر سرویس در آدرس زیر به صورت کامل قرار داده شده است.   جهت رفع هرگونه مشکل و یا پرسش با پشتیبانی در تماس باشید.   [راهنمای تکمیلی وب‌سرویس‌ها](https://www.payping.io/help/fa/category/api--qspohi/)    # POSTMAN  برای راحتی کار، فایل postman سرویس ها برای شما آماده شده است که می توانید از لینک زیر روند استفاده از آن را مطالعه بفرمایین و قالب مربوطه را دانلود نمایید.    [راهنمای postman](https://www.payping.io/help/fa/postman/)   # توضیحات تکمیلی برای تمام سرویس‌ها   برای فراخوانی سرویس‌های صفحه‌بندی (pagination) اگر پارامتر ورودی ارسال نشود، حداکثر ۱۰ آیتم نمایش داده می‌شود و همچنین حداکثر تعداد دریافت آیتم به ازای هر درخواست ۵۰ عدد می‌باشد و بیشتر از آن را سرویس پشتیبانی نمی‌کند و در صورت نیاز به بارگزاری تمام آیتم‌های یک سرویس به صورت یکجا با ایمیل به بخش پشتیبانی در تماس باشید. همینطور توجه داشته باشین واحد پول در تمام سرویس‌ها تومان می‌باشد و منطقه زمانی تمامی‌ تاریخ و ساعت‌ها برابر با ساعت جهانی یا UTC می‌باشد.   # نکاتی برای آپلود فایل‌ها   برای آپلود هرگونه فایل اعم از عکس پروفایل کاربران و یا گزارشات پرداخت‌ها و ... می‌بایست که از [سرویس بارگذاری فایل](#tag/Upload) استفاده کنید.    پس از انجام عملیات آپلود توسط سرویس بارگذاری فایل، تنها کافیست نام فایل آپلود شده که در خروجی سرویس به شما برگردانده می‌شود را ذخیره نمایید.   # جدول کدهای دریافتی از هر سرویس   بعد از ارسال هر درخواست به سمت سرور، از سمت ما طبق قواعد وب‌سرویس‌های RESTful یک کدی به شما بازگرداننده می‌شود.  هر کد معنایی دارد که در جدول زیر توضیحات مربوطه را می‌بینید   |شماره کد|توضیحات|  |-------|--------|  |`200`| عملیات با موفقیت انجام شد |  |`400`| مشکلی در ارسال درخواست وجود دارد |  |`500`| مشکلی در سرور رخ داده است |  |`503`| سرور در حال حاضر قادر به پاسخگویی نمی‌باشد |  |`401`| عدم دسترسی|  |`403`| دسترسی غیر مجاز |  |`404`| آیتم درخواستی مورد نظر موجود نمی‌باشد |  
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.43
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/PUserData', 'model/ProductFullDeatilViewModel'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./PUserData'), require('./ProductFullDeatilViewModel'));
  } else {
    // Browser globals (root is window)
    if (!root._) {
      root._ = {};
    }
    root._.PayDirectVM = factory(root._.ApiClient, root._.PUserData, root._.ProductFullDeatilViewModel);
  }
}(this, function(ApiClient, PUserData, ProductFullDeatilViewModel) {
  'use strict';

  /**
   * The PayDirectVM model module.
   * @module model/PayDirectVM
   * @version v1
   */

  /**
   * Constructs a new <code>PayDirectVM</code>.
   * @alias module:model/PayDirectVM
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>PayDirectVM</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PayDirectVM} obj Optional instance to populate.
   * @return {module:model/PayDirectVM} The populated <code>PayDirectVM</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'String');
      if (data.hasOwnProperty('product'))
        obj.product = ProductFullDeatilViewModel.constructFromObject(data['product']);
      if (data.hasOwnProperty('userData'))
        obj.userData = PUserData.constructFromObject(data['userData']);
      if (data.hasOwnProperty('payCode'))
        obj.payCode = ApiClient.convertToType(data['payCode'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} amount
   */
  exports.prototype.amount = undefined;

  /**
   * @member {module:model/ProductFullDeatilViewModel} product
   */
  exports.prototype.product = undefined;

  /**
   * @member {module:model/PUserData} userData
   */
  exports.prototype.userData = undefined;

  /**
   * @member {String} payCode
   */
  exports.prototype.payCode = undefined;


  return exports;

}));
